title: Exploring the Eurovision Song Contest

thumbnail_description: |
  The Eurovision Song Contest is an international song competition organized
  annually by the European Broadcasting Union (EBU) which features participants
  representing primarily European countries.

sections:
  - title: Introduction
    items:
      - type: text
        content: |
          After the 2020 Eurovision Song Contest was canceled, we are excited
          about this year’s finals more than ever, but geeks among us can’t just
          wait around doing nothing! Every year Eurovision brings us a fantastic
          mash-up of extravagant outfits, catchy songs, and bold dance moves.
          Underneath the surface of glitter and rainbows, there is a complicated
          story of geopolitics, rivalry, and tactics hidden in the collection of
          interconnected data. We will try to untangle strategic voting, neighbor
          preferences, and political rivalries with the help of graph analytics.

  - title: Data model
    items:
      - type: text
        content: |
          Our dataset is quite simple. There are 51 `Country` nodes with the
          following properties: `name`, `capital`, `lat`, `lng` and `flag`.
          The properties `lat` and `lng` represent the coordinates of a country's
          capital city and will be important for visualizing the data on a map.
          The same is true for the `flag` property.
          Each year's winner and runner-up are connected to `Winner` and `RunnerUp`
          nodes, respectively, with an edge `IS` that contains the property `year`.
          The `Country` nodes are connected with the `BORDERS` edge if they are
          neighboring countries.`VOTE_JURY` and `VOTE_TELEVOTE` edges have
          properties `year` and `points`. `VOTE_JURY` edges represent a number of
          points given by each country's professional jury, and `VOTE_TELEVOTE`
          edges represent the general public's vote that has been introduced in 1997.
          The voting system has been changed a few times so far but since 2009 the
          winner is determined by votes of the jury and public in an equal split.
      - type: image
        content: |
          ![](/graph_schema.png)

  - title: Example queries
    items:
      - type: example
        content: |
          Some countries have been more successful than others in producing good
          music (or keeping strong relationships with their neighbors). Let’s
          check which country was the most victorious since 1975.
      - type: query
        content: |
          ```cypher
          MATCH (c:Country)-[i:IS]-(w:Winner)
          RETURN c.name AS Country, count(i) AS Wins
          ORDER BY Wins DESC;
          ```
      - type: example
        content: |
          Coming in second on Eurovision is like nearly winning a medal at the
          Olympics. Let’s check the biggest runner-ups of Eurovision.
      - type: query
        content: |
          ```cypher
          MATCH (c:Country)-[i:IS]-(r:RunnerUp)
          RETURN c.name AS Country, count(i) AS RunnerUp
          ORDER BY RunnerUp DESC;
          ```
      - type: example
        content: |
          But it’s not all about winning! There is a special satisfaction in
          supporting your favorite song and casting a vote. Some countries were
          better than others in predicting a winner, or is it just that some have
          better taste? Let’s check which countries gave the most points to the
          winners throughout history.
      - type: query
        content: |
          ```cypher
          MATCH (c:Country)-[vote:VOTE_JURY]->(: Country)-[i:IS]->(w:Winner)
          WHERE vote.points = 12 AND vote.year = i.year
          WITH c, COUNT(vote.points) AS points
          RETURN c.name AS Country, points
          ORDER BY points DESC
          LIMIT 10;
          ```
      - type: example
        content: |
          But it turns out that it isn’t a matter of good or bad taste. When we
          take a look at the list of countries that didn’t give any points to
          winners over the years.
      - type: query
        content: |
          ```cypher
          MATCH (c:Country)-[v:VOTE_JURY]->(:Country)-[i:IS]->(w:Winner)
          WHERE v.points = 0 AND v.year=i.year
          RETURN c.name AS Country, count(v) AS WasWrong
          ORDER BY WasWrong DESC
          LIMIT 10;
          ```
      - type: example
        content: |
          So what’s Eurovision voting really about? Is having a catchy song
          really what it takes to win, or is there more to it? Maybe similar
          languages or familiar cultures play a role. Let’s check who fancies
          who by looking into which countries exchange the most points between
          each other.
      - type: query
        content: |
          ```cypher
          MATCH (c1:Country)-[v1:VOTE_JURY]->(c2:Country), (c1: Country)<-[v2:VOTE_JURY]-(c2:Country)
          WHERE v1.year = v2.year
          WITH c1.name AS Country1, c2.name AS Country2, SUM(v1.points) + sum(v2.points) AS Points
          RETURN Country1, Points, Country2
          ORDER BY Points DESC;
          ```
      - type: example
        content: |
          Let’s check how points from neighbors influenced the choice of winners over the years.
      - type: query
        content: |
          ```cypher
          MATCH (w: Winner)-[i:IS]-(c1: Country)-[b:BORDERS]-(c2: Country),
                (c1: Country)<-[v:VOTE_JURY]-(c2: Country)
          WHERE i.year = v.year
          WITH c1.name AS Country, sum(v.points) AS neighbour_points, i.points AS total_points
          RETURN Country, round(1.0 * neighbour_points/total_points * 100) as Percent_of_neighbour_votes
          ORDER BY Percent_of_neighbour_votes DESC;
          ```
      - type: example
        content: |
          First, let’s find out who has the most neighbors participating in the competition.
      - type: query
        content: |
          ```cypher
          MATCH (c1:Country)-[:BORDERS]-(c2:Country)
          WITH DISTINCT c2.name AS Neighbor, c1.name as Country
          RETURN Country, COUNT(Neighbor) AS Number_of_neighbors
          ORDER BY Number_of_neighbors DESC LIMIT 10;
          ```
      - type: example
        content: |
          Let’s finish with a specific example of how much geographical location influences
          the vote. Russia was the winner in 2008, but how many points would it get if
          voting for your neighbors were forbidden?
      - type: query
        content: |
          ```cypher
          MATCH (c1:Country)-[b:BORDERS]-(c2:Country {name: 'Russia'}),
                (c1:Country)-[v:VOTE_JURY {year: 2008}]->(c2:Country)
          WITH sum(v.points) AS border_vote, c2.name AS name
          MATCH (:Country)-[v:VOTE_JURY {year: 2008}]->(c:Country {name: 'Russia'})
          RETURN c.name AS Country, sum(v.points) AS Points, sum(v.points)-border_vote AS Points_without_neighbours;
          ```
